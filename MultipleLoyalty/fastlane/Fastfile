# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

platform :ios do
  desc "Description of what the lane does"
  lane :custom_lane do
    # add actions here: https://docs.fastlane.tools/actions
  end
end
# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)

GIT_AUTHORIZATION = ENV["GIT_AUTHORIZATION"]
TEMP_KEYCHAIN_USER = ENV["TEMP_KEYCHAIN_USER"]
TEMP_KEYCHAIN_PASSWORD = ENV["TEMP_KEYCHAIN_PASSWORD"]
APPLE_ISSUER_ID = ENV["APPLE_ISSUER_ID"]
APPLE_KEY_ID = ENV["APPLE_KEY_ID"]
APPLE_KEY_CONTENT = ENV["APPLE_KEY_CONTENT"]

def delete_temp_keychain(name)
  delete_keychain(
    name: name
  ) if File.exist? File.expand_path("~/Library/Keychains/#{name}-db")
end

def create_temp_keychain(name, password)
  create_keychain(
    name: name,
    password: password,
    unlock: false,
    timeout: 0
  )
end

def ensure_temp_keychain(name, password)
  delete_temp_keychain(name)
  create_temp_keychain(name, password)
end

platform :ios do
  desc "Description of what the lane does"

  lane :release do |options|

    produce(
      username: "eebubekirsezer@gmail.com",
      app_identifier: "#{options[:bundle_id]}",
      app_name: "#{options[:app_name]}",
      language: "English",
      app_version: "1.0",
      sku: "1234",
    )

  end

  lane :signCertificates do |options|

    keychain_name = "ebubekir"
    keychain_password = "123456"
    ensure_temp_keychain(keychain_name, keychain_password)

    api_key = app_store_connect_api_key(
      key_id: "ZR7X3QK8T9",
      issuer_id: "3522dab4-21a9-4a18-b313-0a9b773a79bd",
      key_filepath: "YOUR_P8",
      duration: 1200,            
      in_house: false
    )

    match(
      type: 'appstore',
      app_identifier: "#{options[:bundle_id]}",
      git_basic_authorization: Base64.strict_encode64("YOUR_TOKEN"),
      keychain_name: keychain_name,
      keychain_password: keychain_password,
      api_key: api_key
    )

  end
end
